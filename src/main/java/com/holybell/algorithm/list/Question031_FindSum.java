package com.holybell.algorithm.list;

import com.alibaba.fastjson.JSONObject;

import java.util.*;

/**
 * 难度：简单
 * <p>
 * 从数组里面查找和为指定数字的两两组合
 */
public class Question031_FindSum {


    /**
     * 假定数字不重复，求数组内两两数字给定和为指定数字的组合
     *
     * @param a   给定数组
     * @param sum 给定和
     */
    private static List<List<Integer>> myFindSum(int[] a, int sum) {

        return null;

    }


    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------
    // --------------------------------------------------------------------

    /**
     * 1. 可以双重循环两两数字求和
     * 2. 可以先排序然后使用头尾指针，因为排序后的数组头尾指针不符合要么大的移动，要么小的移动
     * <p>
     * 假定数字不重复，求数组内两两数字给定和为指定数字的组合
     *
     * @param a   给定数组
     * @param sum 给定和
     */
    private static List<List<Integer>> findSum(int[] a, int sum) {

        // 空数组不处理
        if (a == null || a.length == 0) {
            return null;
        }

        List<List<Integer>> resultList = new ArrayList<>();

        // 遍历数组,存储到Map中
        Map<Integer, Integer> numMap = new HashMap<>();
        for (int num : a) {
            numMap.put(num, num);
        }

        // 查找是否存在和为给定数值的另一个成员
        for (int num : a) {
            int _temp = sum - num;
            if (numMap.get(_temp) != null) {
                resultList.add(Arrays.asList(num, _temp));
                numMap.remove(num);         // 使用过的key移走，避免重复使用
                numMap.remove(_temp);       // 使用过的key移走，避免重复使用
            }
        }
        return resultList;
    }


    public static void main(String[] args) {
        int a[] = {1, 7, 17, 2, 6, 3, 14};
        System.out.println("正确答案:" + (findSum(a, 20) != null ? JSONObject.toJSONString(findSum(a, 20)) : null));
        System.out.println("----------------------------->");
        System.out.println("正确答案:" + (myFindSum(a, 20) != null ? JSONObject.toJSONString(myFindSum(a, 20)) : null));
    }

}
